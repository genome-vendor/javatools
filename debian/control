Source: javatools
Priority: optional
Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>
XSBC-Original-Maintainer: Debian Java Maintainers <pkg-java-maintainers@lists.alioth.debian.org>
Uploaders: Matthew Johnson <mjj29@debian.org>, Niels Thykier <niels@thykier.net>
Build-Depends: debhelper (>= 7.0.50~)
Build-Depends-Indep: default-jdk, libarchive-zip-perl (>= 1.30-5~), perl
Standards-Version: 3.9.2
Section: java
Vcs-Git: git://git.debian.org/git/pkg-java/javatools.git
Vcs-Browser: http://git.debian.org/?p=pkg-java/javatools.git

Package: jarwrapper
Architecture: all
Depends: binfmt-support, fastjar, ${misc:Depends}
Description: Run executable Java .jar files
 Jarwrapper sets up binfmt-misc to run executable jar files
 using the installed java runtime.
 .
 It also includes a /usr/share/jarwrapper/java-arch.sh script
 to convert Debian architecture names into java names to locate
 libjvm.so

Package: javahelper
Architecture: all
Depends: ${misc:Depends}, debhelper, devscripts,
         bsdmainutils, dpkg-dev, dctrl-tools,
         libarchive-zip-perl (>= 1.30-5~)
Suggests: cvs,
          gawk,
          tofrodos,
Description: Helper scripts for packaging Java programs
 Javahelper contains several scripts which help in packaging
 Java programs.
 .
 jh_depends searches jars to find which packages they depend on,
 similar to dh_shlibdeps. It will also add depends on jarwrapper
 for packages with executable jars.
 .
 jh_classpath will register the classpath dependencies for each
 jar so that they can be automatically loaded when that jar is
 used by other programs.
 .
 jh_manifest updates the manifest in jar files according to
 a provided spec so that the resultant jar files will work with
 jarwrapper-enabled packages.
 .
 jh_exec looks for symlinks to jars which should be executable 
 and makes them executable
 .
 jh_build builds java files to jars for you.
 .
 jh_installlibs installs library jars into the correct locations
 .
 jh_makepkg generates a template for a Debian Java package for you
 .
 jh_installeclipse installs features/plugins built by pde-build.
 .
 jh_setupenvironment prepares an out of source built for eclipse builds.
 .
 jh_generateorbitdir creates an populates an orbit dir for eclipse builds.
 .
 jh_compilefeatures compiles eclipse features based on feature ids.
 .
 /usr/share/javahelper/java-vars.mk provides a selection of useful
 variables such as various JVM paths and the JVM name for the architecture
 .
 /usr/share/javahelper/java-arch.sh converts Debian architecture 
 names into java names to locate libjvm.so in non-make build systems
 .
 javahelper provides CDBS and dh macros so that it can be used with those
 package build systems.
 .
 Note that some of the eclipse helpers depends on packages not pulled
 by default (like with devscripts). You can find these scripts in
 Suggests.

Package: java-propose-classpath
Architecture: all
Depends: gcj-jdk, javahelper (= ${binary:Version}), fastjar, ${misc:Depends}
Description: Helper script to suggest a classpath for jar files
 java-propose-classpath analyzes a set of jar files and the installed
 jars on the system to suggest a correct classpath for use with
 jh_classpath/jh_manifest
 . 
 This package should not be in any build-depends since java-propose-classpath
 cannot be run automatically.

